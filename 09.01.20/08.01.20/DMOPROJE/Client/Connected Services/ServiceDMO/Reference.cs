//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.ServiceDMO {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductsDTO", Namespace="http://schemas.datacontract.org/2004/07/DTOs")]
    [System.SerializableAttribute()]
    public partial class ProductsDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DiscontinuedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProductsIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SupplierIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal UnitPriceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Discontinued {
            get {
                return this.DiscontinuedField;
            }
            set {
                if ((this.DiscontinuedField.Equals(value) != true)) {
                    this.DiscontinuedField = value;
                    this.RaisePropertyChanged("Discontinued");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName {
            get {
                return this.ProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true)) {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductsID {
            get {
                return this.ProductsIDField;
            }
            set {
                if ((this.ProductsIDField.Equals(value) != true)) {
                    this.ProductsIDField = value;
                    this.RaisePropertyChanged("ProductsID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SupplierID {
            get {
                return this.SupplierIDField;
            }
            set {
                if ((this.SupplierIDField.Equals(value) != true)) {
                    this.SupplierIDField = value;
                    this.RaisePropertyChanged("SupplierID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal UnitPrice {
            get {
                return this.UnitPriceField;
            }
            set {
                if ((this.UnitPriceField.Equals(value) != true)) {
                    this.UnitPriceField = value;
                    this.RaisePropertyChanged("UnitPrice");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserDTO", Namespace="http://schemas.datacontract.org/2004/07/DTOs")]
    [System.SerializableAttribute()]
    public partial class UserDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SupplierIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Role {
            get {
                return this.RoleField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleField, value) != true)) {
                    this.RoleField = value;
                    this.RaisePropertyChanged("Role");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SupplierID {
            get {
                return this.SupplierIDField;
            }
            set {
                if ((this.SupplierIDField.Equals(value) != true)) {
                    this.SupplierIDField = value;
                    this.RaisePropertyChanged("SupplierID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceDMO.IServiceDMO")]
    public interface IServiceDMO {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceDMO/GetAllProducts", ReplyAction="http://tempuri.org/IServiceDMO/GetAllProductsResponse")]
        Client.ServiceDMO.ProductsDTO[] GetAllProducts(System.Nullable<int> supplierId, string role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceDMO/GetAllProducts", ReplyAction="http://tempuri.org/IServiceDMO/GetAllProductsResponse")]
        System.Threading.Tasks.Task<Client.ServiceDMO.ProductsDTO[]> GetAllProductsAsync(System.Nullable<int> supplierId, string role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceDMO/Login", ReplyAction="http://tempuri.org/IServiceDMO/LoginResponse")]
        Client.ServiceDMO.UserDTO Login(string userID, string paswword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceDMO/Login", ReplyAction="http://tempuri.org/IServiceDMO/LoginResponse")]
        System.Threading.Tasks.Task<Client.ServiceDMO.UserDTO> LoginAsync(string userID, string paswword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceDMO/DeleteProduct", ReplyAction="http://tempuri.org/IServiceDMO/DeleteProductResponse")]
        string DeleteProduct(int id, string role, int suplierid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceDMO/DeleteProduct", ReplyAction="http://tempuri.org/IServiceDMO/DeleteProductResponse")]
        System.Threading.Tasks.Task<string> DeleteProductAsync(int id, string role, int suplierid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceDMO/AddProduct", ReplyAction="http://tempuri.org/IServiceDMO/AddProductResponse")]
        string AddProduct(string role, Client.ServiceDMO.ProductsDTO p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceDMO/AddProduct", ReplyAction="http://tempuri.org/IServiceDMO/AddProductResponse")]
        System.Threading.Tasks.Task<string> AddProductAsync(string role, Client.ServiceDMO.ProductsDTO p);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceDMOChannel : Client.ServiceDMO.IServiceDMO, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceDMOClient : System.ServiceModel.ClientBase<Client.ServiceDMO.IServiceDMO>, Client.ServiceDMO.IServiceDMO {
        
        public ServiceDMOClient() {
        }
        
        public ServiceDMOClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceDMOClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceDMOClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceDMOClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Client.ServiceDMO.ProductsDTO[] GetAllProducts(System.Nullable<int> supplierId, string role) {
            return base.Channel.GetAllProducts(supplierId, role);
        }
        
        public System.Threading.Tasks.Task<Client.ServiceDMO.ProductsDTO[]> GetAllProductsAsync(System.Nullable<int> supplierId, string role) {
            return base.Channel.GetAllProductsAsync(supplierId, role);
        }
        
        public Client.ServiceDMO.UserDTO Login(string userID, string paswword) {
            return base.Channel.Login(userID, paswword);
        }
        
        public System.Threading.Tasks.Task<Client.ServiceDMO.UserDTO> LoginAsync(string userID, string paswword) {
            return base.Channel.LoginAsync(userID, paswword);
        }
        
        public string DeleteProduct(int id, string role, int suplierid) {
            return base.Channel.DeleteProduct(id, role, suplierid);
        }
        
        public System.Threading.Tasks.Task<string> DeleteProductAsync(int id, string role, int suplierid) {
            return base.Channel.DeleteProductAsync(id, role, suplierid);
        }
        
        public string AddProduct(string role, Client.ServiceDMO.ProductsDTO p) {
            return base.Channel.AddProduct(role, p);
        }
        
        public System.Threading.Tasks.Task<string> AddProductAsync(string role, Client.ServiceDMO.ProductsDTO p) {
            return base.Channel.AddProductAsync(role, p);
        }
    }
}
